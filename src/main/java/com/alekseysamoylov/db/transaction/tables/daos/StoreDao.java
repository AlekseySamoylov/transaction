/*
 * This file is generated by jOOQ.
*/
package com.alekseysamoylov.db.transaction.tables.daos;


import com.alekseysamoylov.db.transaction.tables.Store;
import com.alekseysamoylov.db.transaction.tables.records.StoreRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreDao extends DAOImpl<StoreRecord, com.alekseysamoylov.db.transaction.tables.pojos.Store, Integer> {

    /**
     * Create a new StoreDao without any configuration
     */
    public StoreDao() {
        super(Store.STORE, com.alekseysamoylov.db.transaction.tables.pojos.Store.class);
    }

    /**
     * Create a new StoreDao with an attached configuration
     */
    public StoreDao(Configuration configuration) {
        super(Store.STORE, com.alekseysamoylov.db.transaction.tables.pojos.Store.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.alekseysamoylov.db.transaction.tables.pojos.Store object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.alekseysamoylov.db.transaction.tables.pojos.Store> fetchById(Integer... values) {
        return fetch(Store.STORE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.alekseysamoylov.db.transaction.tables.pojos.Store fetchOneById(Integer value) {
        return fetchOne(Store.STORE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.alekseysamoylov.db.transaction.tables.pojos.Store> fetchByName(String... values) {
        return fetch(Store.STORE.NAME, values);
    }
}
